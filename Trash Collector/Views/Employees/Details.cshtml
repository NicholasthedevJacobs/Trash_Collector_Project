@model Trash_Collector.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>
@section scripts{
    <!DOCTYPE html>
    <html>
    <head>
        <style>
            /* Set the size of the div element that contains the map */
            #map {
                height: 400px; /* The height is 400 pixels */
                width: 100%; /* The width is the width of the web page */
            }
        </style>
    </head>
    <body>
        <h3>My Google Maps Demo</h3>
        <!--The div element for the map -->
        <div id="map"></div>
        <script>
            // Initialize and add the map
            function initMap() {
                // The location of Uluru
                var uluru = { lat: @Html.DisplayFor(model => model.Latitude), lng: @Html.DisplayFor(model => model.Longitude) };
                // The map, centered at Uluru
                var map = new google.maps.Map(
                    document.getElementById('map'), { zoom: 15, center: uluru });
                // The marker, positioned at Uluru
                var marker = new google.maps.Marker({ position: uluru, map: map });
            }
        </script>
        <!--Load the API from the specified URL
        * The async attribute allows the browser to render the page while the API loads
        * The key parameter will contain your own API key (which is not needed for this tutorial)
        * The callback parameter executes the initMap() function
        -->
        <script defer
                src="https://maps.googleapis.com/maps/api/js?key=@KeysAPI.mapsKey&callback=initMap">
        </script>
    </body>
</html>



<!--<style>
    #map {
        height: 100%
    }
</style>
<html>
<head>
    <title>Simple Map</title>



</head>
<body>
    <div id="map"></div>
</body>
</html>
<section class="scripts">
    <script type="text/javascript">
        "use strict";
        let map;

        function initMap() {
            var pin = {
                lat: @Html.DisplayFor(model => model.Latitude)
                lng: @Html.DisplayFor(model => model.Longitude)}
            var marker = new google.maps.Marker({ position: pin, map: map });
            map = new google.maps.Map(document.getElementById("map"), {
                center: {

                    lat: -34.397,
                    lng: 150.644
                },
                zoom: 8
            });
        }

    </script>
    @Html.DisplayFor(model => model.Longitude)

    <div>-->@*@KeysAPI.mapsKey*@<!--</div>
    <iframe width="600"
            height="450"
            frameborder="0" style="border:0"
            src="https://www.google.com/maps/embed/v1/place?key=@KeysAPI.mapsKey&q=callback=initMap" allowfullscreen>-->
        @*&q=Space+Needle,Seattle+WA*@
    <!--</iframe>



</section>-->



}
<div>
    <h4>Employee</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupDay)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExtraPickup)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExtraPickup)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDateEndOfPickups)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDateEndOfPickups)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndDateEndOfPickups)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDateEndOfPickups)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MoneyOwed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MoneyOwed)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

